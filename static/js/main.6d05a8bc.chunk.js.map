{"version":3,"sources":["firebase.js","Store/StoreApp.js","LandingPage/LandingPage.js","Individual/Individual.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","libraries","mapContainerStyle","width","height","center","lat","lng","options","disableDefaultUI","zoomControl","StoreApp","useLoadScript","googleMapsApiKey","process","REACT_APP_GOOGLE_MAPS_API_KEY","isLoaded","loadError","React","useState","markers","setMarkers","selectedMarker","setSelectedMarker","signUps","setSignUps","signUpRef","firestore","collection","useEffect","ref","database","eventInfo","on","response","data","val","id","push","time","onSnapshot","querySnapshot","items","forEach","doc","useForm","register","handleSubmit","mapRef","useRef","onMapLoad","useCallback","map","current","class","zoom","onLoad","onClick","marker","position","parseFloat","icon","url","scaledSize","window","google","maps","Size","origin","Point","anchor","onCloseClick","name","description","startDate","endDate","onSubmit","Date","toString","document","getElementById","reset","type","step","required","signup","fname","lname","email","src","alt","to","className","Individual","open","setOpen","i","Dialog","onClose","PaperProps","style","borderRadius","newSignUp","set","catch","err","console","error","App","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6d05a8bc.chunk.js","sourcesContent":["import firebase from \"firebase\"\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCCcdbiuG287wCxcntd9Zmb0FZlLYtCYxs\",\n    authDomain: \"refood-75a72.firebaseapp.com\",\n    databaseURL: \"https://refood-75a72-default-rtdb.firebaseio.com\",\n    projectId: \"refood-75a72\",\n    storageBucket: \"refood-75a72.appspot.com\",\n    messagingSenderId: \"878850802529\",\n    appId: \"1:878850802529:web:87b2ccc79a156cd620fb20\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport firebase from \"../firebase\"\nimport { reflect } from \"async\";\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"400px\",\n};\nconst center = {\n  lat: 37.33,\n  lng: -121.893,\n};\nconst options = {\n  disableDefaultUI: true,\n  zoomControl: true,\n}\n\nexport default function StoreApp() {\n  const {isLoaded, loadError} = useLoadScript({\n   googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n   libraries,\n  });\n\n  const [markers, setMarkers] = React.useState([]);\n  const [selectedMarker, setSelectedMarker] = React.useState(null);\n  const [signUps, setSignUps] = React.useState([]);\n\n  const signUpRef = firebase.firestore().collection(\"/signups\");\n\n  function getSignUps(){\n    signUpRef.onSnapshot((querySnapshot) => {\n      const items = [];\n      querySnapshot.forEach((doc) => {\n        items.push(doc.data());\n      });\n      setSignUps(items);\n    })\n  }\n\n  useEffect(() => {\n    const ref = firebase.database().ref(\"/EventInfo\");\n    let eventInfo = [];\n    ref.on(\"value\", (response) => {\n      const data = response.val();\n      for (let id in data) {\n        eventInfo.push({\n          data: data[id].data,\n          time: data[id].time,\n        });\n      }\n      setMarkers(eventInfo);\n    });\n    getSignUps();\n  }, []);\n\n\n  const { register, handleSubmit } = useForm();\n  const onSubmit = (data) => {\n    const firestore = firebase.database().ref(\"/EventInfo\");\n    firestore.push({ data, time: new Date().toString() });\n    setMarkers((current) => [\n      ...current,\n      { data, time: new Date().toString() },\n    ]);\n    document.getElementById(\"add-marker-form\").reset();\n  }\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, [])\n\n  if(loadError) return \"Error loading maps\";\n  if(!isLoaded) return \"Loading maps\";\n\n  return <div>\n    <h1>Refood Store Interface</h1><br />\n    <div class = \"map\">\n      <h2 class = \"map-header\">Food Event Map</h2>\n      <GoogleMap \n        mapContainerStyle = {mapContainerStyle}\n        zoom = {12}\n        center = {center}\n        options = {options}\n        onLoad = {onMapLoad}\n        onClick = {()=>setSelectedMarker(null)}\n      >\n        {/* renders markers on the map */}\n        {markers.map((marker) => (\n          <Marker\n            key = {marker.time}\n            position = {{lat: parseFloat(marker.data.lat), lng: parseFloat(marker.data.lng)}}\n            icon = {{\n              url: '../refood_icon.png',\n              scaledSize: new window.google.maps.Size(45,45),\n              origin: new window.google.maps.Point(0,0),\n              anchor: new window.google.maps.Point(22.5,22.5)\n            }}\n            onClick = {() => {\n              setSelectedMarker(marker);\n            }}\n          />\n        ))}\n\n        {selectedMarker ? (\n            <InfoWindow\n              position={{ lat: parseFloat(selectedMarker.data.lat), lng: parseFloat(selectedMarker.data.lng) }}\n              onCloseClick={() => {\n                setSelectedMarker(null);\n              }}\n            >\n              <div>\n                <h2>\n                  {selectedMarker.data.name}\n                </h2>\n                <p>\n                  {selectedMarker.data.description}\n                </p>\n                <p>\n                  Event start: {selectedMarker.data.startDate}\n                </p>\n                <p>\n                  Event end: {selectedMarker.data.endDate}\n                </p>\n              </div>\n            </InfoWindow>\n          ) : null}\n\n      </GoogleMap>\n    </div>\n    <br /><br />\n    <div class = \"create-event\">\n      <h2 class = \"form-header\">Create New Event</h2><br />\n      <form onSubmit = {handleSubmit(onSubmit)} id = \"add-marker-form\">\n        <div class = \"field\">\n         <input type = \"number\" step = \"any\" required {...register(\"lat\")} /><br/><br/>\n         <label>Latitude</label>\n        </div>\n        <div class = \"field\">\n         <input type = \"number\" step = \"any\" required {...register(\"lng\")} /><br/><br/>\n         <label>Longitude</label>\n        </div>\n        <div class = \"field\">\n         <input type = \"text\" required {...register(\"name\")} /><br/><br/>\n         <label>Event name</label>\n        </div>\n        <div class = \"field\">\n         <input type = \"datetime-local\" required {...register(\"startDate\")} /><br/><br/>\n         <label>Event start</label>\n        </div>\n        <div class = \"field\">\n         <input type = \"datetime-local\" required {...register(\"endDate\")} /><br/><br/>\n         <label>Event end</label>\n        </div>\n        <div class = \"field\">\n          <input type = \"text\" required {...register(\"description\")} /><br/>\n         <label>Event description</label>\n        </div>\n         <input type = \"submit\" />\n    </form>\n    </div>\n    <h1>Sign Ups</h1>\n    <div id = \"table-container\">\n      <table>\n        <thead>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Email</th>\n        </thead>\n        <tbody>\n          {signUps.map((signup) => (\n            <tr>\n              <td>{signup.fname}</td>\n              <td>{signup.lname}</td>\n              <td>{signup.email}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  </div>\n}\n","import React from \"react\";\nimport \"../index.css\"\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function StoreApp() {\n\n  return <div id = \"container\">\n      <img class = 'lp-logo' src=\"refood_transparent.png\" alt=\"Refood Logo\" />\n      <Link to = \"/store-view\">\n        <button className = 'landing-button'>Sign in as Store</button>\n      </Link>\n      <Link to = \"/i-view\">\n        <button className = 'landing-button'>View Upcoming Events</button>\n      </Link>\n    </div>\n  }","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport firebase from \"../firebase\"\n\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"600px\",\n};\nconst center = {\n  lat: 37.33,\n  lng: -121.893,\n};\nconst options = {\n  disableDefaultUI: true,\n  zoomControl: true,\n}\n\n\n\nexport default function Individual() {\n  const {isLoaded, loadError} = useLoadScript({\n   googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n   libraries,\n  });\n\n  const [markers, setMarkers] = React.useState([]);\n  const [selectedMarker, setSelectedMarker] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  \n  const signUpRef = firebase.firestore().collection(\"/signups\");\n\n  function addSignUp(newSignUp){\n    signUpRef\n    .doc()\n    .set(newSignUp)\n    .catch((err) => {\n      console.error(err);\n    })\n  }\n\n  useEffect(() => {\n    const ref = firebase.database().ref(\"/EventInfo\");\n    let eventInfo = [];\n    ref.on(\"value\", (response) => {\n      const data = response.val();\n      for (let id in data) {\n        eventInfo.push({\n          data: data[id].data,\n          time: data[id].time,\n        });\n      }\n      for (let i in eventInfo) {\n        setMarkers(eventInfo);\n      }\n    });\n  }, []);\n\n  const handleSignUpOpen = () =>{\n      setOpen(true);\n  }\n\n  const handleSignUpClose = () =>{\n    setOpen(false);\n}\n\n  const { register, handleSubmit } = useForm();\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, [])\n\n  if(loadError) return \"Error loading maps\";\n  if(!isLoaded) return \"Loading maps\";\n\n  return <div>\n    <h1>Refood Individual Interface</h1><br />\n    <div class = \"map\">\n      <h2 class = \"map-header\">Food Event Map</h2>\n      <GoogleMap \n        mapContainerStyle = {mapContainerStyle}\n        zoom = {12}\n        center = {center}\n        options = {options}\n        onLoad = {onMapLoad}\n        onClick = {()=>setSelectedMarker(null)}\n      >\n        {/* renders markers on the map */}\n        {markers.map((marker) => (\n          <Marker\n            key = {marker.time}\n            position = {{lat: parseFloat(marker.data.lat), lng: parseFloat(marker.data.lng)}}\n            icon = {{\n              url: '../refood_icon.png',\n              scaledSize: new window.google.maps.Size(45,45),\n              origin: new window.google.maps.Point(0,0),\n              anchor: new window.google.maps.Point(22.5,22.5)\n            }}\n            onClick = {() => {\n              setSelectedMarker(marker);\n            }}\n          />\n        ))}\n\n        {selectedMarker ? (\n            <InfoWindow\n              position={{ lat: parseFloat(selectedMarker.data.lat), lng: parseFloat(selectedMarker.data.lng) }}\n              onCloseClick={() => {\n                setSelectedMarker(null);\n              }}\n            >\n              <div>\n              <h2>\n                  {selectedMarker.data.name}\n                </h2>\n                <p>\n                  {selectedMarker.data.description}\n                </p>\n                <p>\n                  Event start: {selectedMarker.data.startDate}\n                </p>\n                <p>\n                  Event end: {selectedMarker.data.endDate}\n                </p>\n                <button className = 'signup-button' onClick = {handleSignUpOpen} >Sign Up</button>\n                <Dialog\n                  open = {open}\n                  onClose = {handleSignUpClose}\n                  PaperProps={{\n                    style: { borderRadius: 20, width: \"55vh\"}\n                  }}>\n                      <div class = \"sign-form\">\n                        <h2>Event Sign Up</h2>\n                        <br />\n                        <form id = \"signup-form\" onSubmit = {handleSubmit((data) =>{\n                          addSignUp(data);\n                          document.getElementById(\"signup-form\").reset();\n                        })}>\n                          <div class = \"field\">\n                            <input type = \"text\" required {...register(\"fname\")} /><br/><br/>\n                            <label>First Name</label>\n                          </div>\n                          <div class = \"field\">\n                            <input type = \"text\" required {...register(\"lname\")} /><br/><br/>\n                            <label>Last Name</label>\n                          </div>\n                          <div class = \"field\">\n                            <input type = \"email\" required {...register(\"email\")} /><br/><br/>\n                            <label>Email</label>\n                          </div>\n                            <input type = \"submit\" />\n                        </form>\n                      </div>\n                </Dialog>\n              </div>\n            </InfoWindow>\n          ) : null}\n\n      </GoogleMap>\n    </div>\n  </div>\n}\n","import React from \"react\";\nimport StoreApp from \"./Store/StoreApp\";\nimport LandingPage from \"./LandingPage/LandingPage\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Individual from \"./Individual/Individual\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/store-view\">\n            <StoreApp />\n          </Route>\n          <Route exact path=\"/i-view\">\n            <Individual />\n          </Route>\n          <Route exact path=\"/\">\n            <LandingPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}